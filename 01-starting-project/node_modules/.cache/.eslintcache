[{"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\index.js":"1","D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\App.js":"2","D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\Header\\Header.js":"3","D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\UserInput\\UserInput.js":"4","D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\ResultsTable\\ResultsTable.js":"5"},{"size":255,"mtime":1686643417000,"results":"6","hashOfConfig":"7"},{"size":1606,"mtime":1697660885759,"results":"8","hashOfConfig":"7"},{"size":292,"mtime":1697660765546,"results":"9","hashOfConfig":"7"},{"size":1309,"mtime":1697661088576,"results":"10","hashOfConfig":"7"},{"size":654,"mtime":1697660876491,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1blyt4y",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\index.js",[],[],"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\App.js",["29"],[],"import React from \"react\";\nimport Header from \"./components/Header/Header\";\nimport UserInput from \"./components/UserInput/UserInput\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\n\nfunction App() {\n  const calculateHandler = (userInput) => {\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution,\n      });\n    }\n\n    // do something with yearlyData ...\n  };\n\n  return (\n    <div>\n      <Header />\n      <UserInput />\n      <ResultsTable />\n      {/* Todo: Show below table conditionally (only once result data is available) */}\n      {/* Show fallback text if no data is available */}\n    </div>\n  );\n}\n\nexport default App;\n",[],"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\Header\\Header.js",[],[],"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\UserInput\\UserInput.js",[],[],"D:\\projects\\React Projects\\Investment-Calculator\\01-starting-project\\src\\components\\ResultsTable\\ResultsTable.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":7,"column":9,"nodeType":"32","messageId":"33","endLine":7,"endColumn":25},"no-unused-vars","'calculateHandler' is assigned a value but never used.","Identifier","unusedVar"]